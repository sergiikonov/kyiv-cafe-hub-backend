version: "3.8"

services:
  db:
    image: postgres:16
    restart: unless-stopped
    env_file: ./.env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - ${POSTGRES_LOCAL_PORT}:${POSTGRES_DOCKER_PORT}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 10
      start_period: 30s
      timeout: 5s

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 5s

  app:
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    build: .
    restart: on-failure
    env_file: ./.env
    ports:
      - ${SPRING_LOCAL_PORT}:${SPRING_DOCKER_PORT}
      - ${DEBUG_PORT}:${DEBUG_PORT}
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:${POSTGRES_DOCKER_PORT}/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:$DEBUG_PORT"
    command: ["java", "org.springframework.boot.loader.launch.JarLauncher"]
